{"version":3,"file":"static/js/310.7d873f8d.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C,8HClBYK,E,OAAQC,GAAAA,MAAH,uC,SCkClB,EA9Be,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAPAC,EAAAA,EAAAA,YAAU,WACHL,IAGLM,EAAAA,EAAAA,IAAiBN,GAAOO,KAAKH,EAC9B,GAAE,CAACJ,KAGF,iCACE,kBAAMQ,SAhBO,SAAAC,GACfA,EAAEC,iBACFX,EAAgB,CAAEC,MAAOS,EAAEE,cAAcC,SAASZ,MAAMa,MAAMC,SAE9DL,EAAEE,cAAcI,OACjB,EAWG,WACE,SAACpB,EAAD,CAAOqB,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDb,IAAgB,SAAClB,EAAA,EAAD,CAAYC,OAAQiB,MAG1C,C","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 20%;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesQuery } from 'Api';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { Input } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchMovies, setSearchMovies] = useState(null);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value.trim() });\n\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMoviesQuery(query).then(setSearchMovies);\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchMovies && <MoviesList movies={searchMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","Input","styled","useSearchParams","searchParams","setSearchParams","query","get","useState","searchMovies","setSearchMovies","useEffect","fetchMoviesQuery","then","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","name"],"sourceRoot":""}